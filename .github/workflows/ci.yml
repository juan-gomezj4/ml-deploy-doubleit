name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  lint-and-format:
    name: Pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Run pre-commit checks
        run: uvx pre-commit run --all-files --show-diff-on-failure --color=always

  test:
    name: Run tests and coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install project dependencies
        run: uv sync --group back

      - name: Run tests with coverage
        run: uv run pytest --cov --cov-branch --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5

  build-and-deploy:
    name: Build & Deploy to Cloud Run (dev)
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker "${{ secrets.GCP_REGION }}-docker.pkg.dev"

      - name: Build and push backend image
        run: |
          docker build --platform linux/amd64 -f docker/backend/Dockerfile -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-deploy-repo/doubleit-backend-dev:latest .
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-deploy-repo/doubleit-backend-dev:latest

      - name: Build and push frontend image
        run: |
          docker build --platform linux/amd64 -f docker/frontend/Dockerfile -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-deploy-repo/doubleit-frontend-dev:latest .
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-deploy-repo/doubleit-frontend-dev:latest

      - name: Deploy backend to Cloud Run
        run: |
          gcloud run deploy doubleit-backend-dev \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-deploy-repo/doubleit-backend-dev:latest \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --memory=1Gi \
            --allow-unauthenticated

      - name: Deploy frontend to Cloud Run
        run: |
          gcloud run deploy doubleit-frontend-dev \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-deploy-repo/doubleit-frontend-dev:latest \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --memory=1Gi \
            --allow-unauthenticated \
            --set-env-vars BACKEND_URL=https://doubleit-backend-dev-137961191542.${{ secrets.GCP_REGION }}.run.app/predict
